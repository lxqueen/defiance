---
import { Font } from "astro:assets";
import { SITE_NAME } from "../consts";

import "../assets/css/theme.css";
import "../assets/css/root.css";

export interface Props {
	title?: string;
}

const { title } = Astro.props;
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{title ? `${title} | ${SITE_NAME}` : SITE_NAME}</title>

		<Font cssVariable="--font-castithan" />
		<Font cssVariable="--font-exo" />
		<Font cssVariable="--font-irathient" />
		<Font cssVariable="--font-montserrat" />
		<link rel="stylesheet" href="https://early.webawesome.com/webawesome@3.0.0-alpha.12/dist/styles/themes/default.css" />
		<link rel="stylesheet" href="https://early.webawesome.com/webawesome@3.0.0-alpha.12/dist/styles/webawesome.css" />
		<link rel="stylesheet" href="https://early.webawesome.com/webawesome@3.0.0-alpha.12/dist/styles/brand/cyan.css" />
		<script type="module" src="https://early.webawesome.com/webawesome@3.0.0-alpha.12/dist/webawesome.loader.js"></script>

		<script>
			// Check/apply dark mode.
			const systemSchemeDark = window.matchMedia('(prefers-color-scheme: dark)');

			globalThis.changeColorScheme = function(event = systemSchemeDark) {
				const colorScheme = localStorage.getItem('color_scheme') ?? 'auto';

				const isDark = colorScheme === 'auto' ? event.matches : colorScheme === 'dark';
				document.documentElement.classList.toggle('wa-dark', isDark);
			}

			systemSchemeDark.addEventListener('change', globalThis.changeColorScheme);
			globalThis.changeColorScheme();
		</script>
	</head>

	<body>
		<slot />
	</body>
</html>
