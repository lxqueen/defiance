---
import { type CollectionEntry, getEntry, render } from "astro:content";
import { ItemTierNumerals } from "@/consts";
import Scrip from "../Scrip.astro";
import TierBadge from "../TierBadge.astro";

interface Props {
	item: CollectionEntry<"items">;
}

const { item } = Astro.props;

const { Content: ItemContent } = await render(item);

// biome-ignore lint/style/noNonNullAssertion: this will always exist, suck it
const parent = await getEntry(
	item.data.parent.collection,
	item.data.parent.id,
)!;

const { Content: ParentContent } = parent && (await render(parent));

const synergy =
	item.data.synergy && (await getEntry("gameSynergies", item.data.synergy?.id));

const { Content: SynergyContent } = await render(synergy);
---

<wa-card class="shop-item" with-header with-footer appearance="filled outlined" size="small">
	<div slot="header" class="header wa-stack wa-gap-xs">
		<h2 class="wa-heading-m" data-tier={item.data.tier}>
			{item.data.name ?? (
				<>
					{parent.data.name}
					{item.data.type === 'gameMods' && ` ${ItemTierNumerals[item.data.tier]}`}
				</>
			)}
		</h2>

		<p class="wa-caption-m wa-cluster wa-gap-2xs">
			<TierBadge tier={item.data.tier} />
			{item.data.type === 'gameMods' && (
				<>
					<span>&bull;</span>
					<span>{parent.data.weaponSupertype?.id}</span>
				</>
			)}
			<span>&bull;</span>
			<span>{parent.data.type?.id}</span>
		</p>
	</div>

	<div class="content"><ItemContent /></div>
	{(!!item.body && !!parent.body) && <hr />}
	<div class="content"><ParentContent /></div>

	{!!synergy && (
		<>
			{(!!item.body || !!parent.body) && <hr />}

			<div class="content">
				<h3 class="wa-heading-s">Synergy: {synergy.data.name}</h3>
				<SynergyContent />
			</div>
		</>
	)}

	<div slot="footer" class="footer wa-cluster wa-gap-xs">
		<wa-relative-time class="updated wa-caption-s" date={item.data.date}></wa-relative-time>

		{item.data.salePrice ? (
			<Scrip class="price --old" value={item.data.price} />
			<Scrip class="price --sale" value={item.data.salePrice} />
		) : (
			<Scrip class="price" value={item.data.price} />
		)}
	</div>
</wa-card>

<style scoped>
	.shop-item {
		--gradient-top: radial-gradient(50% 4em at top center, var(--wa-color-brand-fill-normal), transparent);
		--gradient-back: linear-gradient(to bottom right, color-mix(in oklab, var(--background-color), white), var(--background-color));
		--spacing-block: calc(var(--spacing) / 2);
		--spacing-inline: var(--spacing);

		background-image: var(--gradient-top), var(--gradient-back);

		.wa-dark & {
			--gradient-back: linear-gradient(to bottom right, var(--background-color), color-mix(in oklab, var(--background-color), black 20%));
		}

		h2,
		h3 {
			font-family: var(--wa-font-family-body);
		}

		&::part(header),
		&::part(body),
		&::part(footer) {
			padding-block: var(--spacing-block);
			padding-inline: var(--spacing-inline);
		}

		&::part(footer) {
			margin-block-start: auto;
		}

		.header {
			span[data-tier] {
				font-weight: var(--wa-font-weight-bold);
			}

			h2 {
				text-shadow: var(--wa-shadow-offset-x-s) var(--wa-shadow-offset-y-s) var(--wa-shadow-blur-s) color-mix(in oklab, var(--wa-color-shadow), transparent);

				&[data-tier="1"] {
					color: var(--shop-color-tier-1);
				}

				&[data-tier="2"] {
					color: var(--shop-color-tier-2);
				}

				&[data-tier="3"] {
					color: var(--shop-color-tier-3);
				}

				&[data-tier="4"] {
					color: var(--shop-color-tier-4);
				}

				&[data-tier="5"] {
					color: var(--shop-color-tier-5);
				}

				&[data-tier="6"] {
					color: var(--shop-color-tier-6);
				}
			}
		}

		.content {
			display: flex;
			flex-direction: column;
			gap: var(--spacing-block);

			> * {
				margin-block: 0;
			}

			ul {
				list-style: none;
				text-indent: calc(var(--wa-space-xl) * -1);
			}
		}

		hr {
			margin-block: var(--spacing-block);
			margin-inline: calc(var(--spacing-inline) * -1);
			border-color: var(--border-color);
		}

		.footer {
			align-items: center;
			justify-content: flex-end;
		}

		.updated {
			margin-inline-end: auto;
		}

		.price {
			color: var(--wa-color-yellow);
			font-weight: var(--wa-font-weight-bold);

			&.--old {
				font-size: var(--wa-font-size-xs);
				color: var(--wa-color-text-quiet);
				text-decoration: line-through;
			}

			&.--sale {
				color: var(--wa-color-green);
			}
		}
	}
</style>
